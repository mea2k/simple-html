variables:
  DOCKER_IMAGE: devops-html
  KUBE_CONFIG_FILE: /tmp/kubeconfig

stages:
  - build
  - deploy

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]  # Преобразуем образ, чтобы избежать его стандартного поведения
  tags:
    - docker

  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(echo -n "json_key:${CI_REGISTRY_KEY}" | base64 | tr -d '\n' )\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY}/${DOCKER_IMAGE}:${CI_COMMIT_SHORT_SHA}"

  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

build_tag:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]  # Преобразуем образ, чтобы избежать его стандартного поведения
  tags:
    - docker


  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(echo -n "json_key:${CI_REGISTRY_KEY}" | base64 | tr -d '\n' )\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY}/${DOCKER_IMAGE}:${CI_COMMIT_TAG}"
  rules:
    - if: $CI_COMMIT_TAG

deploy:
  stage: deploy
  #image: gcr.io/cloud-builders/kubectl:latest
  image: 
    name: bitnami/kubectl:latest
    entrypoint: ['']
  tags:
    - docker
  script:
    # Декодирование kubeconfig и применение конфигурации для деплоя.
    - echo ${KUBE_CONFIG} | base64 -d > ${KUBE_CONFIG_FILE}
    - kubectl --kubeconfig ${KUBE_CONFIG_FILE} get nodes
    - kubectl --kubeconfig ${KUBE_CONFIG_FILE} create secret docker-registry cr.yandex --docker-server=https://cr.yandex/ --docker-username=oauth --docker-password=${YR_OAUTH_TOKEN} --docker-email=${YR_EMAIL} --dry-run=client -o yaml | kubectl --kubeconfig ${KUBE_CONFIG_FILE} apply -f -
    - kubectl --kubeconfig ${KUBE_CONFIG_FILE} apply -f "${CI_PROJECT_DIR}/kubernetes/configmap.yaml"
    - sed "s|__IMAGE__|${CI_REGISTRY}/${DOCKER_IMAGE}:${CI_COMMIT_TAG:-latest}|" "${CI_PROJECT_DIR}/kubernetes/deployment.yaml" | kubectl --kubeconfig ${KUBE_CONFIG_FILE} apply -f -
    - kubectl --kubeconfig ${KUBE_CONFIG_FILE} apply -f "${CI_PROJECT_DIR}/kubernetes/service.yaml"
    - kubectl --kubeconfig ${KUBE_CONFIG_FILE} rollout status deployment/nginx-app
  rules:
    - if: $CI_COMMIT_TAG